module Rpick
  module Workflows
    class CustomerBoxes < Workflow
      def run
        @picker.inventory_manager.clear_hands
        @picker.say_ready_for_boxes
        while true do
          get_box
          handle_box ? return_open_box : return_locked_box
        end
      end

      def get_box # obtain a box to work on
        echo "Waiting for customer box"
        dothistimeout "accept", 1, /You accept (.*)'s offer and are now holding an? (.*)\./
        if $1
          @current_customer = GameObj.pcs.find{|c| c.name == $1 }
          @current_box = GameObj.left_hand && GameObj.left_hand.noun =~ /#{$2}/ ? GameObj.left_hand : GameObj.right_hand
          return true
        end
        while line = get
          if line =~ /(.*) offers you an? (.*)\..* to accept the offer/
            fput "accept"
            @current_customer = GameObj.pcs.find{|c| c.name == $1 }
            @current_box = GameObj.left_hand && GameObj.left_hand.noun =~ /#{$2}/ ? GameObj.left_hand : GameObj.right_hand
            break
          end
        end
      end

      def return_open_box # return a succesfully handled box
        dothis "give ##{@current_box.id} to ##{@current_customer.id}", /has accepted your offer/
      end

      def return_locked_box # return a box that could not be successfully handled
        @picker.say_cant_open_box
        return_open_box
      end
    end
  end
end
